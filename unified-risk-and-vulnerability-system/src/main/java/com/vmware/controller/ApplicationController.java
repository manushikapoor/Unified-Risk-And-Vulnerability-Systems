package com.vmware.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.vmware.dto.ApplicationOverviewDto;
import com.vmware.entity.Exceptions;
import com.vmware.entity.OssVulnerabilities;
import com.vmware.entity.Vulnerabilities;
import com.vmware.service.ApplicationOverviewService;
import com.vmware.service.ExceptionService;
import com.vmware.service.OssVulnerabilityService;
import com.vmware.service.UserRole;
import com.vmware.service.VulnerabilityService;
import com.vmware.util.ToJSON;

import io.swagger.annotations.ApiOperation;

@RestController
public class ApplicationController {
	
	@Autowired
	VulnerabilityService vulnerabilityService;
	
	@Autowired
	ExceptionService exceptionService;
	
	@Autowired
	OssVulnerabilityService ossVulnerabilityService;
	
	@Autowired
	ApplicationOverviewService applicationOverviewService;
	
	@Autowired
	UserRole userRole;

//	@GetMapping(value="/showAllVulnerabilities")
//	public List<Vulnerabilities> showAllVulnerabilities() {
//		return vulnerabilityService.getAllVulnerabilities();
//	}
//	
	@GetMapping(value="/showAllExceptions")
	@ApiOperation(value = "Show All Exceptions")
	public List<Exceptions> showAllExceptions() {
		return exceptionService.getAllExceptions();
	}
	
	@PostMapping(value="/getRole")
	@ApiOperation(value = "Get Roles")
	public String getRole(@RequestHeader("userName") String userName) {
		System.out.print("reached");
		String role =  userRole.getRole(userName);
		return ToJSON.createJsonString(role);
		
	}
	
	
	@GetMapping(value="/getAllOssVulnerabilities")
	@ApiOperation(value = "Show all OSS vulnerabilities")
	public List<OssVulnerabilities> getAllOssVulnerabilities() {
		return ossVulnerabilityService.getAllOssVulnerabilities();
	}
	
	@GetMapping(value="/getAllOssVulnerabilitiesByOwner")
	@ApiOperation(value = "Show all OSS vulnerabilities")
	public List<OssVulnerabilities> getAllOssVulnerabilitiesByOwner(@RequestParam(name = "user") String user,@RequestParam(name = "role") String role) {
		List<OssVulnerabilities> result = new ArrayList<OssVulnerabilities>();
		if(role.equals("Developer")) {
			 result = ossVulnerabilityService.findAllOssVulnerabilitiesByOwner(user);
		}else {
			result = ossVulnerabilityService.getAllOssVulnerabilities();
		}
		return result;
	}
	
	@GetMapping(value="/getAllOssVulnerabilitiesByAppName")
	@ApiOperation(value = "Show All OSS vulnerabilities of a specific application")
	public List<OssVulnerabilities> getAllOssVulnerabilitiesByAppName(@RequestParam(name = "applicationName") String applicationName) {
		return ossVulnerabilityService.findAllOssVulnerabilities(applicationName);
	}
	
	@GetMapping(value="/getCountOfVulnerabilities")
	@ApiOperation(value = "Show Count Of Vulnerabilities for a user")
	public Map<String,Integer> getCountOfVulnerabilities(@RequestParam(name = "user") String user,@RequestParam(name = "role") String role) {
		return applicationOverviewService.getCountOfVulnerabilities(user,role);
	}
	
	@GetMapping(value = "/getVulnerabilityTrendBySeverity")
	@ApiOperation(value = "Get trend of vulnerabilities by severity for each month in this calendar year")
	public Map<String, Object> getVulnerabilityTrendBySeverity(@RequestParam(name = "user") String user, @RequestParam(name = "role") String role) {
		return applicationOverviewService.getVulnerabilityTrendBySeverityForCalendarYear(user, role);
	}

	
	@GetMapping(value = "/getApplicationOverview")
	@ApiOperation(value = "Get Application Overview Data")
	public List<ApplicationOverviewDto> getApplicationOverview(@RequestParam(name = "user") String user, @RequestParam(name = "role") String role) {
		return applicationOverviewService.getApplicationOverview(user, role);
	}

}
